<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="settings.xml">
    <entry key="node_file" type="xstring" value="settings.xml"/>
    <config key="flow_stack"/>
    <config key="internal_node_subsettings">
        <entry key="memory_policy" type="xstring" value="CacheSmallInMemory"/>
    </config>
    <config key="model">
        <entry key="script" type="xstring" value="import knime.scripting.io as knio%%00010import pandas as pd%%00010import seaborn as sns%%00010import matplotlib.pyplot as plt%%00010%%00010# Convert input table to a pandas DataFrame%%00010data = knio.input_tables[0].to_pandas()%%00010%%00010# Select only numeric columns for correlation matrix%%00010numeric_data = data.select_dtypes('number')%%00010%%00010# Calculate correlation matrix%%00010corr_matrix = numeric_data.corr()%%00010%%00010# Create the heatmap plot%%00010plt.figure(figsize=(10, 8))%%00010sns.heatmap(corr_matrix, annot=True, fmt=&quot;.2f&quot;, cmap=&quot;coolwarm&quot;, vmin=-1, vmax=1)%%00010plt.title(&quot;Correlation Matrix Heatmap&quot;)%%00010plt.xticks(rotation=45, ha='right')%%00010plt.yticks(rotation=0)%%00010plt.tight_layout()%%00010%%00010# Assign the figure to knio.output_view%%00010knio.output_view = knio.view_matplotlib(plt.gcf())"/>
        <entry key="python3_command" type="xstring" value=""/>
    </config>
    <config key="variables">
        <entry key="version" type="xstring" value="V_2019_09_13"/>
        <config key="tree">
            <config key="python3_command">
                <entry key="used_variable" type="xstring" value=""/>
                <entry key="used_variable_flawed" type="xboolean" value="false"/>
                <entry key="exposed_variable" type="xstring" isnull="true" value=""/>
            </config>
        </config>
    </config>
    <entry key="customDescription" type="xstring" isnull="true" value=""/>
    <entry key="state" type="xstring" value="CONFIGURED"/>
    <entry key="factory" type="xstring" value="org.knime.python3.scripting.nodes2.view.PythonViewNodeFactory"/>
    <entry key="node-name" type="xstring" value="Python View"/>
    <entry key="node-bundle-name" type="xstring" value="KNIME Python 3 - Scripting Nodes"/>
    <entry key="node-bundle-symbolic-name" type="xstring" value="org.knime.python3.scripting.nodes"/>
    <entry key="node-bundle-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
    <entry key="node-bundle-version" type="xstring" value="5.3.2.v202409031127"/>
    <entry key="node-feature-name" type="xstring" value="KNIME Python Integration"/>
    <entry key="node-feature-symbolic-name" type="xstring" value="org.knime.features.python3.scripting.feature.group"/>
    <entry key="node-feature-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
    <entry key="node-feature-version" type="xstring" value="5.3.3.v202410291554"/>
    <config key="factory_settings"/>
    <config key="node_creation_config">
        <config key="Input object (pickled)"/>
        <config key="Input table">
            <config key="port_0">
                <entry key="object_class" type="xstring" value="org.knime.core.node.BufferedDataTable"/>
            </config>
        </config>
        <config key="Output image"/>
    </config>
    <entry key="name" type="xstring" value="Python View"/>
    <entry key="hasContent" type="xboolean" value="false"/>
    <entry key="isInactive" type="xboolean" value="false"/>
    <config key="ports"/>
    <config key="filestores">
        <entry key="file_store_location" type="xstring" isnull="true" value=""/>
        <entry key="file_store_id" type="xstring" isnull="true" value=""/>
    </config>
</config>

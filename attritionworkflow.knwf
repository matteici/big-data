<config xmlns="http://www.knime.org/2008/09/XMLConfig">
  <entry key="workflow.knime" type="xstring">
    <config key="workflow">
      <entry key="name" type="xstring" value="Employee Attrition Analysis" />
      <entry key="comment" type="xstring" value="This workflow performs employee attrition analysis using preprocessing, visualization, and MLP classification." />
      <config key="nodes">
        <!-- CSV Reader Node -->
        <config key="node-1">
          <entry key="node_name" type="xstring" value="CSV Reader" />
          <entry key="node_factory" type="xstring" value="org.knime.base.node.io.filehandling.csv.reader2.CSVReaderNodeFactory" />
          <entry key="settings" type="xstring">
            <config key="model">
              <entry key="fileName" type="xstring" value="WA_Fn-UseC_-HR-Employee-Attrition.csv" />
              <entry key="columnNamesRow" type="int" value="1" />
            </config>
          </entry>
        </config>

        <!-- Column Filter Node -->
        <config key="node-2">
          <entry key="node_name" type="xstring" value="Column Filter" />
          <entry key="node_factory" type="xstring" value="org.knime.base.node.preproc.columnfilter.ColumnFilterNodeFactory" />
          <entry key="settings" type="xstring">
            <config key="model">
              <list key="includeNames">
                <entry type="xstring" value="MonthlyIncome" />
                <entry type="xstring" value="JobRole" />
                <entry type="xstring" value="Attrition" />
              </list>
            </config>
          </entry>
        </config>

        <!-- Math Formula Node for Log Transformation -->
        <config key="node-3">
          <entry key="node_name" type="xstring" value="Math Formula" />
          <entry key="node_factory" type="xstring" value="org.knime.base.node.preproc.mathformula.MathFormulaNodeFactory" />
          <entry key="settings" type="xstring">
            <config key="model">
              <entry key="column" type="xstring" value="MonthlyIncome" />
              <entry key="formula" type="xstring" value="LOG($MonthlyIncome$)" />
            </config>
          </entry>
        </config>

        <!-- Numeric Binner Node -->
        <config key="node-4">
          <entry key="node_name" type="xstring" value="Numeric Binner" />
          <entry key="node_factory" type="xstring" value="org.knime.base.node.preproc.binning.numeric.NumericBinnerNodeFactory" />
          <entry key="settings" type="xstring">
            <config key="model">
              <entry key="column" type="xstring" value="YearsAtCompany" />
              <entry key="bins" type="int" value="4" />
            </config>
          </entry>
        </config>

        <!-- One-to-Many Node for One-Hot Encoding -->
        <config key="node-5">
          <entry key="node_name" type="xstring" value="One-to-Many" />
          <entry key="node_factory" type="xstring" value="org.knime.base.node.preproc.missingval2.dummies.DummyNodeFactory" />
          <entry key="settings" type="xstring">
            <config key="model">
              <entry key="column" type="xstring" value="JobRole" />
              <entry key="drop_first" type="bool" value="true" />
            </config>
          </entry>
        </config>

        <!-- Partitioning Node -->
        <config key="node-6">
          <entry key="node_name" type="xstring" value="Partitioning" />
          <entry key="node_factory" type="xstring" value="org.knime.base.node.partitioning.PartitioningNodeFactory" />
          <entry key="settings" type="xstring">
            <config key="model">
              <entry key="train_fraction" type="float" value="0.8" />
            </config>
          </entry>
        </config>

        <!-- Python Script Node -->
        <config key="node-7">
          <entry key="node_name" type="xstring" value="Python Script" />
          <entry key="node_factory" type="xstring" value="org.knime.python2.scripting.node.PythonNodeFactory" />
          <entry key="settings" type="xstring">
            <config key="model">
              <entry key="script" type="xstring">
                <![CDATA[
import pandas as pd
from sklearn.preprocessing import StandardScaler
from sklearn.neural_network import MLPClassifier
from sklearn.metrics import accuracy_score, classification_report

# Process data and train the model
scaler = StandardScaler()
df_train = knime.input_tables[0]
X = df_train.drop("Attrition_Yes", axis=1)
y = df_train["Attrition_Yes"]

X_scaled = scaler.fit_transform(X)
clf = MLPClassifier(hidden_layer_sizes=(120, 60, 30, 10), max_iter=500, random_state=0)
clf.fit(X_scaled, y)

knime.output_tables[0] = pd.DataFrame({"Feature Importance": clf.coefs_})
                ]]>
              </entry>
            </config>
          </entry>
        </config>
      </config>
    </config>
  </entry>
</config>
